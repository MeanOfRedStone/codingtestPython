def dfs_stack(start):
    global graph
    global answer
    global V

    visited = [0 for _ in range(V + 1)]
    stack = []

    answer.append(start)
    if graph[start]:
        visited[start] = 1
        for next_node in graph[start]:
            stack.append(next_node)

    while stack:
        node = stack.pop()
        if visited[node] == 1:
            continue
        visited[node] = 1
        answer.append(node)

        for next_node in graph[node]:
            stack.append(next_node)
            
graph = []
answer = []

T = int(input())

for tc in range(1, T + 1):
    # v : 노드의 개수 e : 간선 수
    V, E = map(int, input().split(" "))
    graph = [[]for _ in range(V + 1)]
    for i in range(E):
        start, end = map(int, input().split(" "))
        graph[start].append(end)
        graph[end].append(start)

    for i in range(1, V + 1):
        graph[i].sort(reverse=True)

    answer = []
    dfs_stack(1)
    print(f"#{tc} ", end = "")
    print(*answer)