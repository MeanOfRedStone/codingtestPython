import sys
sys.setrecursionlimit(10000)

dx = [0, 1, 0, -1]
dy = [1, 0, -1, 0]

def dfs(row, col):
    global visited
    global farm

    if visited[row][col] == 1:
        return

    visited[row][col] = 1

    for i in range(4):
        next_row = row + dx[i]
        next_col = col + dy[i]

        if farm[next_row][next_col] == 1:
            dfs(next_row, next_col)


T = int(input())

for tc in range(T):
    # M : 열 ,N : 행
    M, N, K = map(int, input().split())

    farm = [[0 for _ in range(M + 2)]]
    for i in range(N):
        farm.append([0] + [0 for _ in range(M)] + [0])
    farm.append([0 for _ in range(M + 2)])

    for i in range(K):
        col, row = map(int, input().split())
        farm[row + 1][col + 1] = 1

    count = 0
    visited = [[0 for _ in range(M + 2)]for _ in range(N + 2)]

    for i in range(1, N + 1):
        for j in range(1, M + 1):
            if farm[i][j] == 1 and visited[i][j] == 0:
                count += 1
                dfs(i, j)

    print(count)