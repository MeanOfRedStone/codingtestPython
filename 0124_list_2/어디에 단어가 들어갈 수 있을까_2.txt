"""
1. 개선점
중간에 끊긴 점을 찾아야 하는 부분을
flag 사용에서 -> 단순한 for문으로 변경

2. 전치행렬 사용
회전해서 돌려야 할 부분을 함수를 만들지 않고
대상 자체를 회전함 
"""

import sys
sys.stdin = open("in.txt", "r")

T = int(input())

def find_space(puzzle) :
    global space_for_puzzle

    for i in range(N) :
        count = 0
        for j in range(N) :
            block = puzzle[i][j]
            if block == 1:
                count += 1
                continue

            if count == K:
                space_for_puzzle += 1
            count = 0
        if count == K:
            space_for_puzzle += 1

puzzle = []
N = 0
K = 0
space_for_puzzle = 0
answers = []
for tc in range(T) :
    # N : 퍼즐의 길이 , K : 단어의 길이
    N, K = map(int, input().split(" "))

    # 검정 : 0 하양 : 1
    puzzle = []
    for i in range(N) :
        puzzle.append(list(map(int, input().split())))
    transposed_puzzle = list(map(list, zip(*puzzle)))

    # 흰색 부분에서 연속된 가로 또는 세로의 길이만큼 중 == K 인 것을 찾아라
    space_for_puzzle = 0
    find_space(puzzle)
    find_space(transposed_puzzle)

    answers.append(space_for_puzzle)

for i in range(1, T + 1) :
    print(f"#{i} {answers[i-1]}")