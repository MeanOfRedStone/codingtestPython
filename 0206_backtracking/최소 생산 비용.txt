def back_tracking(combination_sum, depth):
    global visited
    global answer
    if combination_sum >= answer:
        return
    
    if depth == N:
        answer = min(answer, combination_sum)
        return

    for i in range(N):
        if visited[i] == 1:
            continue

        visited[i] = 1
        back_tracking(combination_sum + factories[depth][i], depth + 1)
        visited[i] = 0

T = int(input())

for tc in range(1, T + 1):
    N = int(input())

    factories = []
    for i in range(N):
        factories.append(list(map(int, input().split())))

    visited = [0 for _ in range(N)]
    answer = N * 99
    back_tracking(0, 0)

    print(f"#{tc} {answer}")