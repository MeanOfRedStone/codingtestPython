def back_tracking(combination_sum, index, depth):
    global visited
    global count

    if depth == N:
        if combination_sum == K:
            count += 1
        return

    for i in range(index, 13):
        if visited[i] == 1 and i >= K:
            continue
        visited[i] = 1
        back_tracking(combination_sum + i, i + 1, depth + 1)
        visited[i] = 0

T = int(input())

for tc in range(1, T + 1):
    N, K = map(int, input().split())

    visited = [0 for _ in range(13)]
    count = 0
    back_tracking(0, 1, 0)

    print(f"#{tc} {count}")