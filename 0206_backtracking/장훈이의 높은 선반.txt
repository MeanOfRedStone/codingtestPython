def back_tracking(index, combination_sum):
    global visited
    global answer
    global combination
    if combination_sum >= answer:
        return

    if combination_sum >= B:
        answer = min(answer,combination_sum)
        return

    for i in range(index, N):
        if visited[i] == 1:
            continue
        visited[i] = 1
        back_tracking(i + 1, combination_sum + clerks[i])
        visited[i] = 0

T = int(input())

for tc in range(1, T + 1):
    # S는 점원 키의 합
    N, B = map(int, input().split())
    clerks = list(map(int, input().split()))

    visited = [0 for _ in range(N)]
    answer = 10000 * N
    back_tracking(0, 0)
    print(f"#{tc} {answer - B}")