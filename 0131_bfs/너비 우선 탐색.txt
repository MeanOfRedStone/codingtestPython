def bfs(start):
    global V
    global graph

    answer = []
    visited = [0 for _ in range(V + 1)]
    q = []

    q.append(start)
    visited[start] = 1

    while q:
        node = q.pop(0)
        answer.append(node)
        for next_node in graph[node]:
            if visited[next_node] == 0:
                visited[next_node] = 1
                q.append(next_node)

    return answer


T = int(input())

for tc in range(1, T + 1):
    V, E = map(int, input().split())

    graph = [[]for _ in range(V + 1)]

    for i in range(E):
        start, end = map(int, input().split())
        graph[start].append(end)
        graph[end].append(start)

    for node in graph:
        node.sort()

    answer = bfs(1)
    print(f"#{tc}", end = " ")
    print(*answer)