def search_col() :
    global square

    total_dead_lock = 0

    for col in range(100) :
        magnets = []

        for row in range(100) :
            magnet = square[row][col]

            if magnet != 0 :
                magnets.append(magnet)

        # 1은 내려감 2는 올라감
        total_dead_lock += find_dead_lock(magnets)

    return total_dead_lock

def find_dead_lock(magnets) :
    if len(magnets) == 0 :
        return 0

    now_magnet = magnets.pop(0)
    dead_lock = 0
    while True :
        if not magnets :
            break

        # 1은 내려감 2는 올라감
        if now_magnet == 1 :
            next_magnet = magnets.pop(0)

            # 다음 자석도 1이라면 넘어감
            if next_magnet == 1 :
                continue

            # 다음 자석이 2라면 교착 증가하고 현재 자석 2로
            dead_lock += 1
            now_magnet = 2
            continue

        if now_magnet == 2 :
            next_magnet = magnets.pop(0)

            # 다음 자석도 2라면 넘어감
            if next_magnet == 2:
                continue
            # 다음 자석이 1이라면 현재 자석 1로
            now_magnet = 1

    return dead_lock



sqaure = []
answers = []

for tc in range(10) :
    # 정사각형 한 변의 길이
    N = int(input())

    # 사각형 1 : N극을 가짐 2 : S극을 가짐
    square = []
    for row in range(N) :
        square.append(list(map(int, input().split())))

    answer = search_col()
    answers.append(answer)

for i in range(1, 11) :
    print(f'#{i} {answers[i-1]}')