"""
1. 내부적으로 visited 배열 만들어 사용
-> 산봉우리 확인할 때

2. 외부적으로 중복되는 지 체크하는 배열 하나 사용
-> 이미 검사한 배열은 다시 검사하지 않게

"""

from collections import deque

def find_mountain():
    global board
    global total_visited

    for i in range(1, N + 1):
        for j in range(1, M + 1):
            if total_visited[i][j] == 0:
                    search(i, j)

    return count


direction = [(-1, -1), (-1, 0), (-1, 1), (0, 1), (1, 1), (1, 0), (1, -1), (0, -1)]
def search(i, j):
    global board
    global count
    global total_visited

    visited = [[0 for _ in range(M + 2)] for _ in range(N + 2)]
    queue = deque()
    queue.append((i, j))
    visited[i][j] = 1

    while queue:
        r, c = queue.popleft()

        for dx, dy in direction:
            ni, nj = r + dx, c + dy
            if board[ni][nj] == -1:
                continue

            if board[ni][nj] == board[r][c] and visited[ni][nj] == 0:
                queue.append((ni, nj))
                visited[ni][nj] = 1
                total_visited[ni][nj] = 1
                continue

            if board[r][c] > board[ni][nj]:
                visited[ni][nj] = 1
                continue

            if board[r][c] < board[ni][nj]:
                return
    count += 1



N, M = map(int, input().split())
board = [[-1 for _ in range(M + 2)]]
for i in range(N):
    board.append([-1] + list(map(int, input().split())) + [-1])
board.append([-1 for _ in range(M + 2)])
total_visited = [[0 for _ in range(M + 2)]for _ in range(N + 2)]
count = 0
answer = find_mountain()
print(answer)