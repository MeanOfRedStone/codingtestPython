from collections import deque

def find_candy():
    global D
    queue = deque()
    D[1][1] = board[1][1]
    queue.append((1, 1))

    while queue:
        r, c = queue.popleft()

        for dx, dy in ((1, 0), (0, 1), (1, 1)):
            nr, nc = r + dx, c + dy

            if board[nr][nc] == -1:
                continue

            if D[nr][nc] < D[r][c] + board[nr][nc]:
                D[nr][nc] = D[r][c] + board[nr][nc]
                queue.append((nr, nc))

    print(D[N][M])

N, M = map(int, input().split())

board = [[-1 for _ in range(M + 2)]]
for _  in range(N):
    board.append([-1] + list(map(int, input().split())) + [-1])
board.append([-1 for _ in range(M + 2)])

D = [[-1 for _ in range(M + 2)] for _ in range(N + 2)]

find_candy()

