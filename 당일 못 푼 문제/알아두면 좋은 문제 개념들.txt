<알아 두면 좋은 문제 개념들>
1. SWEA 13680. 어디에 단어가 들어갈 수 있을까?
-> 전치 행렬 zip 과 iterator 사용해서 만들기

2. 백준 2628. 종이 자르기
-> 자르는 구간 찾기

3. 백준 2578.빙고
8방향의 값을 찾는데 어떤 방법을 사용할 수 있을까?

4. 백준 9663 N-Queen
->2차원 배열의 dfs시 어떻게 하면 시간을 줄일 수 있을까?

5. 백준 오큰수(17298), 탑(2493)
-> 스택스러운 풀이

6. 백준 색종이 만들기(2630)
-> 로직의 분리에 대해 고민해 본 문제
-> 로직의 순서의 중요성
-> 분할 정복 : 이중 for문 슬라이싱


7. 백준 토마토(7576)
->하루의 일을 동시에 처리할 때 어떻게 하는가? queue와 bfs스런 풀이

8. 백준 A to B(16953)
-> queue와 bfs는 최단거리를 담보하다는 개념을 고민하게 한 문제

9. 백준 맥주 마시면서 걸어가기(9205)
-> 이차원 배열을 모두 탐색하는 것이 아니라 조건에 맞춰서 과정을 단축하는 방법을 고민
-> visited배열의 인덱스를 활용해 list의 요소를 사용

10. 백준 구간합 구하기 5(11660)
-> 이차원 배열에서 구간합을 어떻게 구할 것인가를 고민

11. SWEA 배열 최소 합(13489)
->가지치기는 어떻게 할 지 패턴을 배운 문제

12. 백준 문자열 폭발(9935)
-> 문자열 중복을 제거할 때는 스택을 중심으로 해야한다는 것을 확인

13. 백두산2(swea18176)
-> 에지 케이스는 생각나는 건 꼭 다 해보아야겠다는 걸 반성하게 해 준 문제
-> 건방 떨지 말자

14. 보급로(swea14117)
-> bfs 에 다익스트라를 어떻게 활용할 수 있을지 고민해본 문제
-> 알고리즘은 활용할 줄 알아야하는 걸 다시 한 번 깨달은 문제

15. 나무자르기(2805)
-> N이 큰 문제에서 시간 복잡도를 줄이기 위해 이진탐색을 고민해볼 문제

16. 퀵 정렬(swea) -> 정복 분할??

17. 병합 정렬(swea) -> 분할 정복

18. 1로 만들기(1463) -> 거리 알고리즘의 갱신 로직을 떠올려 dp를 풀었던 문제

19. 2xn타일링(11727) -> 규칙 찾을 때 문제를 더 자세히 읽어보아야한다는걸 느낀 문제

20. 가장 긴 증가하는 부분 수열(11053) -> 문제 풀이 방식 구상과 착수의 타이밍을 고민해본 문제.

21. 계단 오르기(2579) -> 규칙성이 무엇인지 고민해본 문제

22. 매직스타(3967) -> 백트래킹과 완전탐색의 차이를 이해하고 리팩토링 해본 문제

23. 화물 도크(swea) -> 그리디 방법론 참고. 가장 많은 시간 배분하는 방법

24. 회의실 배정(1931) -> 정렬 방법론 고민. 명시되지 않은 조건의 추론에 대해 고민해본 문제

25. 에어컨(swea) -> set 활용법에 대해 고민해본 문제

26. 백두산4(swea) -> 정렬 심화 2 : 맨하탄 정렬

27. 달팽이(1913) -> **특이한 접근 법** 회전 규칙성을 찾는 문제

28. zoac3(20436) -> 주의 해야한다. 문자열을 활용한 '룩업 테이블' 생성 시는 리스트, 딕셔너리보다 스트링이 좋은 것 같음을 고민해 본 문제

29. 치즈1(2636) -> 
1. bfs 접근 방식이 새로웠던 문제. 연결된 부분에 포인트를 맞추어 bfs를 바깥에서 실행. 색종이_2(2636)과 비슷하지만 다르다.
2. bfs + 방문하는 곳과 처리하는 곳을 다르게 가져가는 유형

30. zoac3(20436)
안정적인 str 타입의 룩업테이블을 만드는 방식을 고민해본 문제

31. 보이저 1호(3987)
-> 시간 복잡도가 널널할때 이를 활용할 줄도 알아야하는 것을 고미해본 문제

32. 야구(17281)
-> 자리를 바꾸는 것으로 시간 복잡도를 관리하는 유형

33. 퇴사(14501)
-> 자료의 특성을 활용해 시간 복잡도를 관리하는 것을 고민하는 것을 실전 감각으로 느꼈던 문제
-> 야구와 함께 잘 고민해보자
-> 내약 점

34. 테트로미노(14500)
->배열의 최댓값을 활용해 가지치기 하는 방법을 고민해본 문제